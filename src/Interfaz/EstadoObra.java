//Sabrina Mato(222071) y Pamela Quesada(171498)
package Interfaz;

import Dominio.*;
import java.awt.Color;
import java.awt.Component;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.Observable;
import java.util.Observer;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import javax.swing.JList;

public class EstadoObra extends javax.swing.JFrame
        implements Observer {

    private Sistema sistema;
    private Obra obra;
    private DefaultListModel<String> model = new DefaultListModel<>();
    private ArrayList<Color> colores = new ArrayList<>();

    /**
     * Creates new form EstadoObra
     */
    public EstadoObra() {
        initComponents();
        sistema.addObserver(this);
    }

    public void update(Observable o, Object ob) {
        model.clear();
        colores.clear();
        if (!lstObras.isSelectionEmpty()) {
            int obSeleccionada = lstObras.getSelectedIndex();
            int rubroSeleccionado = lstRubrosGastosEnObra.getSelectedIndex();

            lstObras.setListData(sistema.arrayObras());
            lstObras.setSelectedIndex(obSeleccionada);

            String selectedObra = lstObras.getSelectedValue();
            int numObra = Integer.parseInt(selectedObra.substring(0, selectedObra.indexOf("-")));
            this.obra = sistema.darObra(numObra);

            lstRubrosGastosEnObra.setListData(sistema.rubrosConGastosEnObra(obra));
            if (rubroSeleccionado >= 0 && rubroSeleccionado < lstRubrosGastosEnObra.getModel().getSize()) {
                lstRubrosGastosEnObra.setSelectedIndex(rubroSeleccionado);
            }
            actualizarListaDeGastos();
        } else {
            lstObras.setListData(sistema.arrayObras());
        }

    }

    public EstadoObra(Sistema sistema) {
        initComponents();
        this.sistema = sistema;
        sistema.addObserver(this);
        lstObras.setListData(sistema.arrayObras());
        lstRubrosGastosEnObra.setListData(sistema.rubrosConGastosEnObra(obra));
        objetoAPantalla();
    }

    public void objetoAPantalla() {
        lblPropietario.setText("Propietario: ");
        lblCapataz.setText("Capataz:");
        lblComienzoObra.setText("Comienzo Obra:");
        lblTotalPresupuestado.setText("Presupuesto: ");
        lblTotalGastado.setText("Total Gastado: ");
        lblTotalGastadoReintegrado.setText("Total Gastado Ya Reintegrado: ");
        lblTotalGastadoNoReintegrado.setText("Total Gastado No Reintegrado: ");
        lblSaldo.setText("Saldo: ");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbsObra = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstObras = new javax.swing.JList<>();
        lblTotalGastadoReintegrado = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstPresupuesto = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstRubrosGastosEnObra = new javax.swing.JList<>();
        lblRubrosConGastosEnLaObra = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        lstGastosRubroSeleccionado = new javax.swing.JList<>();
        lblGastosRubroSeleccionado = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblPresupuestadoYReintegrado = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblPropietario = new javax.swing.JLabel();
        lblComienzoObra = new javax.swing.JLabel();
        lblTotalPresupuestado = new javax.swing.JLabel();
        lblCapataz = new javax.swing.JLabel();
        lblTotalGastado = new javax.swing.JLabel();
        lblSaldo = new javax.swing.JLabel();
        lblTotalGastadoNoReintegrado = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Estado de Obra");

        jPanel1.setLayout(null);

        lbsObra.setText("Obras");
        jPanel1.add(lbsObra);
        lbsObra.setBounds(10, 50, 50, 20);

        lstObras.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstObras.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstObras.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lstObras.setDropMode(javax.swing.DropMode.ON);
        lstObras.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstObrasValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstObras);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 70, 150, 60);

        lblTotalGastadoReintegrado.setText("Total Gastado Ya Reintegrado: ");
        jPanel1.add(lblTotalGastadoReintegrado);
        lblTotalGastadoReintegrado.setBounds(180, 110, 200, 20);

        lstPresupuesto.setAutoscrolls(false);
        jScrollPane2.setViewportView(lstPresupuesto);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(20, 190, 180, 130);

        jLabel1.setText("Presupuesto (Rubros y montos)");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(20, 170, 190, 20);

        lstRubrosGastosEnObra.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstRubrosGastosEnObraValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(lstRubrosGastosEnObra);

        jPanel1.add(jScrollPane3);
        jScrollPane3.setBounds(230, 190, 180, 130);

        lblRubrosConGastosEnLaObra.setText("Rubros con gastos en la obra");
        jPanel1.add(lblRubrosConGastosEnLaObra);
        lblRubrosConGastosEnLaObra.setBounds(230, 170, 190, 20);

        jScrollPane4.setViewportView(lstGastosRubroSeleccionado);

        jPanel1.add(jScrollPane4);
        jScrollPane4.setBounds(440, 190, 240, 130);

        lblGastosRubroSeleccionado.setText("Gastos del rubro seleccionado");
        jPanel1.add(lblGastosRubroSeleccionado);
        lblGastosRubroSeleccionado.setBounds(440, 170, 190, 20);

        jLabel2.setText("CÃ³digo de colores:");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(70, 370, 120, 20);

        jLabel3.setBackground(new java.awt.Color(255, 153, 153));
        jLabel3.setText("No Presupuestado y No Reintegrado");
        jLabel3.setOpaque(true);
        jPanel1.add(jLabel3);
        jLabel3.setBounds(400, 400, 200, 20);

        lblPresupuestadoYReintegrado.setBackground(new java.awt.Color(51, 255, 51));
        lblPresupuestadoYReintegrado.setLabelFor(lstPresupuesto);
        lblPresupuestadoYReintegrado.setText("Presupuestado y Reintegrado");
        lblPresupuestadoYReintegrado.setToolTipText("");
        lblPresupuestadoYReintegrado.setOpaque(true);
        jPanel1.add(lblPresupuestadoYReintegrado);
        lblPresupuestadoYReintegrado.setBounds(190, 370, 200, 20);

        jLabel5.setBackground(new java.awt.Color(204, 255, 204));
        jLabel5.setText("Presupuestado y No Reintegrado");
        jLabel5.setOpaque(true);
        jPanel1.add(jLabel5);
        jLabel5.setBounds(190, 400, 200, 20);

        jLabel6.setBackground(new java.awt.Color(255, 204, 0));
        jLabel6.setText("No Presupuestado y Reintegrado");
        jLabel6.setOpaque(true);
        jPanel1.add(jLabel6);
        jLabel6.setBounds(400, 370, 200, 20);

        lblPropietario.setText("Propietario:");
        jPanel1.add(lblPropietario);
        lblPropietario.setBounds(180, 50, 180, 20);

        lblComienzoObra.setText("ComienzoObra:");
        jPanel1.add(lblComienzoObra);
        lblComienzoObra.setBounds(180, 70, 180, 20);

        lblTotalPresupuestado.setText("Total Presupuestado: ");
        jPanel1.add(lblTotalPresupuestado);
        lblTotalPresupuestado.setBounds(180, 90, 180, 20);

        lblCapataz.setText("Capataz:");
        jPanel1.add(lblCapataz);
        lblCapataz.setBounds(470, 50, 130, 20);

        lblTotalGastado.setText("Total Gastado: ");
        jPanel1.add(lblTotalGastado);
        lblTotalGastado.setBounds(390, 80, 130, 20);

        lblSaldo.setText("Saldo:");
        jPanel1.add(lblSaldo);
        lblSaldo.setBounds(610, 100, 100, 20);

        lblTotalGastadoNoReintegrado.setText("Total Gastado No Reintegrado:");
        jPanel1.add(lblTotalGastadoNoReintegrado);
        lblTotalGastadoNoReintegrado.setBounds(390, 100, 210, 20);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(734, 477));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lstObrasValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstObrasValueChanged
        // TODO add your handling code here:
        // TODO add your handling code here:
        objetoAPantalla();
        if (!evt.getValueIsAdjusting()) {
            String selectedObra = lstObras.getSelectedValue();
            if (selectedObra != null) {
                int numObra = Integer.parseInt(selectedObra.substring(0, selectedObra.indexOf("-")));
                //System.out.println("nro obra" +numObra);

                Obra obra = sistema.darObra(numObra);
                this.obra = obra;
                lblPropietario.setText(lblPropietario.getText() + " " + obra.getPropietario().getNombre());
                lblCapataz.setText(lblCapataz.getText() + " " + obra.getCapataz().getNombre());
                lblComienzoObra.setText(lblComienzoObra.getText() + " " + obra.getMesAÃ±oComienzo());
                lblTotalPresupuestado.setText(lblTotalPresupuestado.getText() + " " + obra.getPresupuesto());
                lstRubrosGastosEnObra.setListData(sistema.rubrosConGastosEnObra(obra));

                lblTotalGastado.setText(lblTotalGastado.getText() + " " + sistema.totalGastado(obra));
                lblTotalGastadoReintegrado.setText(lblTotalGastadoReintegrado.getText() + " " + sistema.totalGastadoReintegrado(obra));
                lblTotalGastadoNoReintegrado.setText(lblTotalGastadoNoReintegrado.getText() + " " + (sistema.totalGastado(obra) - sistema.totalGastadoReintegrado(obra)));
                lblSaldo.setText(lblSaldo.getText() + " " + (obra.getPresupuesto() - sistema.totalGastado(obra)));
                HashMap<String, Integer> rubrosPresupuestados = obra.getRubrosPresupuestados();
                DefaultListModel<String> model = new DefaultListModel<>();
                for (Map.Entry<String, Integer> entry : rubrosPresupuestados.entrySet()) {
                    String rubro = entry.getKey() + " ($" + entry.getValue() + ")";
                    model.addElement("\u2022 " + rubro);
                }

                lstPresupuesto.setModel(model);
            }
        }
    }//GEN-LAST:event_lstObrasValueChanged

    private void lstRubrosGastosEnObraValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstRubrosGastosEnObraValueChanged
       actualizarListaDeGastos();

    }//GEN-LAST:event_lstRubrosGastosEnObraValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EstadoObra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EstadoObra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EstadoObra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EstadoObra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EstadoObra().setVisible(true);
            }
        });
    }

    private void actualizarListaDeGastos() {
        Rubro rubro = sistema.darRubro(lstRubrosGastosEnObra.getSelectedValue());
        String selectedObra = lstObras.getSelectedValue();

        int numObra = Integer.parseInt(selectedObra.substring(0, selectedObra.indexOf("-")));

        Obra obra = sistema.darObra(numObra);
        ArrayList<Gasto> gastosRubro = sistema.gastosRubroSeleccionado(obra, rubro);
        model.clear();
        colores.clear();


        for (Gasto g : gastosRubro) {
            String texto = g.toString();

            int tipo = tipoGasto(g);
            Color color;
            switch (tipo) {
                case 1:
                    color = Color.GREEN; // Presupuestado y Reintegrado
                    break;
                case 2:
                    color = new Color(204, 255, 204); // Presupuestado y No Reintegrado
                    break;
                case 3:
                    color = Color.ORANGE; // No Presupuestado y Reintegrado
                    break;
                case 4:
                    color = new Color(255, 153, 153); // No Presupuestado y No Reintegrado
                    break;
                default:
                    color = Color.WHITE; // Color por defecto
                    break;
            }


            model.addElement(texto);
            colores.add(color);
        }

        lstGastosRubroSeleccionado.setModel(model);


        lstGastosRubroSeleccionado.setCellRenderer(new DefaultListCellRenderer() {
            @Override
            public Component getListCellRendererComponent(JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                JLabel renderer = (JLabel) super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                Color color = colores.get(index);
                renderer.setBackground(color);
                return renderer;
            }
        });
        lstGastosRubroSeleccionado.revalidate();
        lstGastosRubroSeleccionado.repaint();
    }

    public int tipoGasto(Gasto g) {
        int tipo = 0;
        boolean esta = false;
        Obra obra = g.getObra();
        HashMap<String, Integer> rubrosPresupuestados = obra.getRubrosPresupuestados();
        for (String n : rubrosPresupuestados.keySet()) {

            if (g.getRubro().getNombre().equalsIgnoreCase(n)) {
                esta = true;
                //   tipo=1;  //Verde 
            }
        }
        if (esta && g.isPago()) {
            tipo = 1;//verde
        }
        if (esta && !g.isPago()) {
            tipo = 2; //Verde claro
        }
        if (!esta && g.isPago()) {
            tipo = 3; //Naranja

        }
        if (!esta && !g.isPago()) {
            tipo = 4; //Rojo

        }
        return tipo;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblCapataz;
    private javax.swing.JLabel lblComienzoObra;
    private javax.swing.JLabel lblGastosRubroSeleccionado;
    private javax.swing.JLabel lblPresupuestadoYReintegrado;
    private javax.swing.JLabel lblPropietario;
    private javax.swing.JLabel lblRubrosConGastosEnLaObra;
    private javax.swing.JLabel lblSaldo;
    private javax.swing.JLabel lblTotalGastado;
    private javax.swing.JLabel lblTotalGastadoNoReintegrado;
    private javax.swing.JLabel lblTotalGastadoReintegrado;
    private javax.swing.JLabel lblTotalPresupuestado;
    private javax.swing.JLabel lbsObra;
    private javax.swing.JList<String> lstGastosRubroSeleccionado;
    private javax.swing.JList<String> lstObras;
    private javax.swing.JList<String> lstPresupuesto;
    private javax.swing.JList<String> lstRubrosGastosEnObra;
    // End of variables declaration//GEN-END:variables
}
